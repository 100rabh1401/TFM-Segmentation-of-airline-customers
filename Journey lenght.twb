<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0614.1936                               -->
<workbook source-build='10.2.3 (10200.17.0614.1936)' source-platform='mac' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='flight_duration (postgres)' inline='true' name='federated.1s9a08b0zyby0y10w5kyu1q5v67m' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1gnvvlm1pwl71316n8glz1vtw3yb'>
            <connection authentication='username-password' class='postgres' dbname='postgres' odbc-native-protocol='' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <relation connection='postgres.1gnvvlm1pwl71316n8glz1vtw3yb' name='flight_duration' table='[public].[flight_duration]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>document_number</remote-name>
            <remote-type>130</remote-type>
            <local-name>[document_number]</local-name>
            <parent-name>[flight_duration]</parent-name>
            <remote-alias>document_number</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segmento</remote-name>
            <remote-type>131</remote-type>
            <local-name>[segmento]</local-name>
            <parent-name>[flight_duration]</parent-name>
            <remote-alias>segmento</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>28</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>creation_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[creation_date]</local-name>
            <parent-name>[flight_duration]</parent-name>
            <remote-alias>creation_date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flight_length</remote-name>
            <remote-type>3</remote-type>
            <local-name>[flight_length]</local-name>
            <parent-name>[flight_duration]</parent-name>
            <remote-alias>flight_length</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>depart_day</remote-name>
            <remote-type>130</remote-type>
            <local-name>[depart_day]</local-name>
            <parent-name>[flight_duration]</parent-name>
            <remote-alias>depart_day</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>return_day</remote-name>
            <remote-type>130</remote-type>
            <local-name>[return_day]</local-name>
            <parent-name>[flight_duration]</parent-name>
            <remote-alias>return_day</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_of_purchase</remote-name>
            <remote-type>130</remote-type>
            <local-name>[day_of_purchase]</local-name>
            <parent-name>[flight_duration]</parent-name>
            <remote-alias>day_of_purchase</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Creation Date' datatype='date' name='[creation_date]' role='dimension' type='ordinal' />
      <column caption='Day Of Purchase' datatype='string' name='[day_of_purchase]' role='dimension' type='nominal' />
      <column caption='Depart Day' datatype='string' name='[depart_day]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Document Number' datatype='string' default-role='measure' default-type='quantitative' name='[document_number]' role='dimension' type='nominal' />
      <column caption='Flight Length' datatype='integer' name='[flight_length]' role='measure' type='quantitative' />
      <column caption='Return Day' datatype='string' name='[return_day]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Segmento' datatype='real' name='[segmento]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0.0' value='Habituales' />
          <alias key='1.0' value='Nuevos' />
          <alias key='2.0' value='Desvinculados' />
          <alias key='3.0' value='Vacacionales' />
        </aliases>
      </column>
      <column-instance column='[depart_day]' derivation='None' name='[none:depart_day:nk]' pivot='key' type='nominal' />
      <column-instance column='[flight_length]' derivation='None' name='[none:flight_length:ok]' pivot='key' type='ordinal' />
      <column-instance column='[return_day]' derivation='None' name='[none:return_day:nk]' pivot='key' type='nominal' />
      <column-instance column='[segmento]' derivation='None' name='[none:segmento:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Depart Day,Segmento)' hidden='true' name='[Action (Depart Day,Segmento)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[depart_day]' />
          <groupfilter function='level-members' level='[segmento]' />
        </groupfilter>
      </group>
      <group caption='Action (Flight Length,Segmento)' hidden='true' name='[Action (Flight Length,Segmento)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:flight_length:ok]' />
          <groupfilter function='level-members' level='[segmento]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.545648' measure-ordering='alphabetic' measure-percentage='0.454352' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:segmento:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1.0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.0</bucket>
            </map>
            <map to='#edc948'>
              <bucket>3.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:return_day:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Friday   &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thursday &quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Sunday   &quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wednesday&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saturday &quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Tuesday  &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monday   &quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:depart_day:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Friday   &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thursday &quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Sunday   &quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wednesday&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saturday &quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Tuesday  &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monday   &quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Sheet 3' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Day of return' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Day of return' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='date-time' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Day of departure per segment'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Day of departure</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flight_duration (postgres)' name='federated.1s9a08b0zyby0y10w5kyu1q5v67m' />
          </datasources>
          <datasource-dependencies datasource='federated.1s9a08b0zyby0y10w5kyu1q5v67m'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Depart Day' datatype='string' name='[depart_day]' role='dimension' type='nominal' />
            <column caption='Flight Length' datatype='integer' name='[flight_length]' role='measure' type='quantitative' />
            <column-instance column='[depart_day]' derivation='None' name='[none:depart_day:nk]' pivot='key' type='nominal' />
            <column-instance column='[flight_length]' derivation='None' name='[none:flight_length:ok]' pivot='key' type='ordinal' />
            <column-instance column='[segmento]' derivation='None' name='[none:segmento:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Segmento' datatype='real' name='[segmento]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0.0' value='Habituales' />
                <alias key='1.0' value='Nuevos' />
                <alias key='2.0' value='Desvinculados' />
                <alias key='3.0' value='Vacacionales' />
              </aliases>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[Action (Flight Length,Segmento)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:flight_length:ok]' />
              <groupfilter function='level-members' level='[segmento]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:depart_day:nk]' filter-group='3'>
            <groupfilter from='&quot;Friday   &quot;' function='range' level='[none:depart_day:nk]' to='&quot;Wednesday&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:depart_day:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Monday   &quot;</bucket>
              <bucket>&quot;Tuesday  &quot;</bucket>
              <bucket>&quot;Wednesday&quot;</bucket>
              <bucket>&quot;Thursday &quot;</bucket>
              <bucket>&quot;Friday   &quot;</bucket>
              <bucket>&quot;Saturday &quot;</bucket>
              <bucket>&quot;Sunday   &quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[Action (Flight Length,Segmento)]</column>
            <column>[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:depart_day:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:segmento:ok]' value='22' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:depart_day:nk]' value='Day of departure/return'>
              <formatted-text>
                <run>Day of departure/return</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[sum:Number of Records:qk]' />
              <color column='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:depart_day:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[pcto:sum:Number of Records:qk]</rows>
        <cols>([federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:segmento:ok] / [federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:depart_day:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Day of return'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Day of return</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flight_duration (postgres)' name='federated.1s9a08b0zyby0y10w5kyu1q5v67m' />
          </datasources>
          <datasource-dependencies datasource='federated.1s9a08b0zyby0y10w5kyu1q5v67m'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Depart Day' datatype='string' name='[depart_day]' role='dimension' type='nominal' />
            <column caption='Flight Length' datatype='integer' name='[flight_length]' role='measure' type='quantitative' />
            <column-instance column='[depart_day]' derivation='None' name='[none:depart_day:nk]' pivot='key' type='nominal' />
            <column-instance column='[flight_length]' derivation='None' name='[none:flight_length:ok]' pivot='key' type='ordinal' />
            <column-instance column='[return_day]' derivation='None' name='[none:return_day:nk]' pivot='key' type='nominal' />
            <column-instance column='[segmento]' derivation='None' name='[none:segmento:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Return Day' datatype='string' name='[return_day]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Segmento' datatype='real' name='[segmento]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0.0' value='Habituales' />
                <alias key='1.0' value='Nuevos' />
                <alias key='2.0' value='Desvinculados' />
                <alias key='3.0' value='Vacacionales' />
              </aliases>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[Action (Depart Day,Segmento)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[depart_day]' />
              <groupfilter function='level-members' level='[segmento]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[Action (Flight Length,Segmento)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:flight_length:ok]' />
              <groupfilter function='level-members' level='[segmento]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:depart_day:nk]' filter-group='3'>
            <groupfilter from='&quot;Friday   &quot;' function='range' level='[none:depart_day:nk]' to='&quot;Wednesday&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:return_day:nk]'>
            <groupfilter from='&quot;Friday   &quot;' function='range' level='[none:return_day:nk]' to='&quot;Wednesday&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:return_day:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Monday   &quot;</bucket>
              <bucket>&quot;Tuesday  &quot;</bucket>
              <bucket>&quot;Wednesday&quot;</bucket>
              <bucket>&quot;Thursday &quot;</bucket>
              <bucket>&quot;Friday   &quot;</bucket>
              <bucket>&quot;Saturday &quot;</bucket>
              <bucket>&quot;Sunday   &quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[sum:Number of Records:qk]' included-values='in-range'>
            <min>1627</min>
            <max>18968</max>
          </filter>
          <slices>
            <column>[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[sum:Number of Records:qk]</column>
            <column>[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:return_day:nk]</column>
            <column>[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[Action (Flight Length,Segmento)]</column>
            <column>[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[Action (Depart Day,Segmento)]</column>
            <column>[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:depart_day:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[pcto:sum:Number of Records:qk]' value='44' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[sum:Number of Records:qk]' />
              <color column='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:return_day:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[pcto:sum:Number of Records:qk]</rows>
        <cols>([federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:segmento:ok] / [federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:return_day:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='flight_duration (postgres)' name='federated.1s9a08b0zyby0y10w5kyu1q5v67m' />
          </datasources>
          <datasource-dependencies datasource='federated.1s9a08b0zyby0y10w5kyu1q5v67m'>
            <column caption='Depart Day' datatype='string' name='[depart_day]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Document Number' datatype='string' default-role='measure' default-type='quantitative' name='[document_number]' role='dimension' type='nominal' />
            <column caption='Flight Length' datatype='integer' name='[flight_length]' role='measure' type='quantitative' />
            <column-instance column='[flight_length]' derivation='None' name='[none:flight_length:qk]' pivot='key' type='quantitative' />
            <column-instance column='[segmento]' derivation='None' name='[none:segmento:ok]' pivot='key' type='ordinal' />
            <column-instance column='[document_number]' derivation='CountD' name='[pcto:ctd:document_number:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Segmento' datatype='real' name='[segmento]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0.0' value='Habituales' />
                <alias key='1.0' value='Nuevos' />
                <alias key='2.0' value='Desvinculados' />
                <alias key='3.0' value='Vacacionales' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[Action (Depart Day,Segmento)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[depart_day]' />
              <groupfilter function='level-members' level='[segmento]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:flight_length:qk]' included-values='in-range'>
            <min>0</min>
            <max>30</max>
          </filter>
          <filter class='categorical' column='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:segmento:ok]'>
            <groupfilter function='level-members' level='[none:segmento:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:segmento:ok]</column>
            <column>[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:flight_length:qk]</column>
            <column>[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[Action (Depart Day,Segmento)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:flight_length:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:flight_length:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[pcto:ctd:document_number:qk]</rows>
        <cols>([federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:segmento:ok] * [federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:flight_length:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='68900' x='0' y='0'>
              <zone h='36000' id='1' name='Day of departure per segment' w='68900' x='0' y='0' />
              <zone h='34500' id='7' name='Day of return' w='68900' x='0' y='36000' />
              <zone h='29500' id='8' name='Sheet 3' w='68900' x='0' y='70500' />
            </zone>
            <zone fixed-size='311' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='31100' x='68900' y='0'>
              <zone fixed-size='184' h='24500' id='6' is-fixed='true' leg-item-layout='vert' name='Day of departure per segment' pane-specification-id='4' param='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:depart_day:nk]' type='color' w='31100' x='68900' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Day of departure per segment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:depart_day:nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:depart_day:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[cnt:depart_day:qk]</field>
            <field>[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:depart_day:nk]</field>
            <field>[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:segmento:ok]</field>
            <field>[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Day of return'>
      <cards>
        <edge name='left'>
          <strip size='137'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:return_day:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:return_day:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:return_day:nk]</field>
            <field>[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:segmento:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:segmento:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:flight_length:qk]</field>
            <field>[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:segmento:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Day of departure per segment'>
          <highlight field='[federated.1s9a08b0zyby0y10w5kyu1q5v67m].[none:depart_day:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Day of return'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      eB067DH/PyI2b3GRym8kAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Day of departure per segment' width='192'>
      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
      wf8PFYgLwwnootsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Day of return' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
